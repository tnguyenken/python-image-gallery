---
- hosts: localhost
  gather_facts: no
  
  vars:
    
    region: us-east-1
    
    sg_dev: ig-development-mod5
    sg_postgres: ig-postgres-tag-mod5
    sg_sm: ig-secretsmanager-tag-mod5
    
    ec2_key_name: module5
    instance_type: t2.micro
    ami_id: "ami-09d95fab7fff3776c"
    iam_role_name: image-gallery-server-role
    
    user_data: |
        #!/usr/bin/bash
        
        # Install packages
        yum -y update
        amazon-linux-extras install -y java-openjdk11
        yum install -y emacs-nox nano tree python3 java-11-openjdk-devel git
        amazon-linux-extras install -y nginx1
        su ec2-user -l -c 'curl -s "https://get.sdkman.io" | bash && source .bashrc && sdk install gradle'
        
        # Configure/install custom software
        cd /home/ec2-user
        git clone https://github.com/tnguyenken/python-image-gallery.git
        chown -R ec2-user:ec2-user python-image-gallery
        su ec2-user -c "cd ~/python-image-gallery && pip3 install -r requirements.txt --user"
        
        # Start/enable services
        systemctl stop postfix
        systemctl disable postfix
        systemctl start nginx
        systemctl enable nginx
            
  tasks:
  - name: Create EC2 key pair
    ec2_key:
      region: "{{ region }}"
      name: "{{ ec2_key_name }}"
  
  - name: Create EC2 instance
    ec2:
      vpc_subnet_id: "{{ public_subnet_1.subnet.id }}"
      region: "{{ region }}"
      key_name: "{{ ec2_key_name }}"
      group: ['{{ sg_dev }}', '{{ sg_postgres }}', '{{ sg_sm }}']
      instance_type: "{{ instance_type }}"
      instance_profile_name: "{{ iam_role_name }}"
      image: "{{ ami_id }}"
      instance_tags:
        Name: ig-public-subnet
        Module: 5
      wait: yes
      assign_public_ip: yes
      exact_count: 1
      count_tag:
        Module: 5
      user_data: "{{ user_data }}"
    register: pub_ec2
